<project name = "unix-tools" default = "createZip">
    <target name="init">
        <mkdir dir="build"/>
        <mkdir dir="build/classes"/>
        <mkdir dir="build/classes/test"/>
        <mkdir dir="build/classes/src"/>
        <mkdir dir="build/dist"/>
        <mkdir dir="build/dist/bin"/>
        <mkdir dir="build/dist/lib"/>
        <mkdir dir="build/code-coverage/instrumented" />
        <mkdir dir="build/code-coverage/reports/xml" />
        <mkdir dir="build/code-coverage/reports/html" />
        <mkdir dir="build/code-coverage/coverage/xml" />
        <mkdir dir="build/code-coverage/coverage/summaryxml" />
        <mkdir dir="build/code-coverage/coverage/html" />

        <copy todir = "build/dist/bin">
            <fileset dir = "shell-files"/>
        </copy>
        <copy file = "README.md" tofile = "build/dist/README.md"/>
    </target>

    <path id="cobertura.classpath">
        <fileset dir="lib/code-coverage">
            <include name="cobertura-2.0.3.jar" />
            <include name="lib/**/*.jar" />
        </fileset>
    </path>
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <target name = "clean">
        <delete dir = "build"/>
    </target>

    <target name = "compile" depends = "init">
        <javac srcdir = "src" destdir = "build/classes/src" debug="yes" includeAntRuntime = "false">
            <classpath refid="cobertura.classpath" />
        </javac>
    </target>

    <target name = "compile-test" depends = "compile">
        <javac srcdir = "test" destdir= "build/classes/test"
               classpath="lib/test/junit-4.10.jar;build/classes/src" debug="yes" includeAntRuntime = "false">
            <classpath refid="cobertura.classpath" />
        </javac>
    </target>

    <target name="run-tests" depends="compile-test">
        <java classname="org.junit.runner.JUnitCore"
              classpath="lib/test/junit-4.10.jar;
                    build/classes/src/;
                    build/classes/test/">
            <arg value="shwetado.unixtools.CutTest"/>
            <arg value="shwetado.unixtools.HeadTest"/>
            <arg value="shwetado.unixtools.ReduceBlankTest"/>
            <arg value="shwetado.unixtools.SortTest"/>
            <arg value="shwetado.unixtools.TailTest"/>
            <arg value="shwetado.unixtools.UniqTest"/>
            <arg value="shwetado.unixtools.WordCountTest"/>
        </java>
    </target>

    <!--============================================================================-->

    <target name="instrument" depends="run-tests">
        <delete file="cobertura.ser"/>
        <delete dir="build/code-coverage/instrumented" />

        <cobertura-instrument todir="build/code-coverage/instrumented">
            <fileset dir="build/classes/src">
                <include name="**/*.class" />

            </fileset>
        </cobertura-instrument>
    </target>

    <target name="test-coverage" depends="run-tests">
        <junit fork="yes" dir="." failureProperty="test.failed">
            <classpath>
                <pathelement location="build/code-coverage/instrumented"/>
                <pathelement location="build/classes/src" />
                <pathelement location="build/classes/test" />
                <pathelement location="lib/test/junit-4.10.jar"/>
            </classpath>

            <classpath refid= "cobertura.classpath"/>

            <formatter type="xml" />
            <test name="testcase" todir="build/code-coverage/reports/xml" if="testcase" />
            <batchtest todir="build/code-coverage/reports/xml" unless="testcase">
                <fileset dir="test">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="build/code-coverage/reports/xml">
            <fileset dir="build/code-coverage/reports/xml">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="build/code-coverage/reports/html" />
        </junitreport>
    </target>

    <target name="coverage-check">
        <cobertura-check branchrate="34" totallinerate="100" />
    </target>

    <target name="coverage-report">
        <cobertura-report srcdir="src" destdir="build/code-coverage/coverage/xml" format="xml" />
    </target>

    <target name="summary-coverage-report">
        <cobertura-report srcdir="src" destdir="build/code-coverage/coverage/summaryxml" format="summaryXml" />
    </target>

    <target name="alternate-coverage-report">
        <cobertura-report destdir="build/code-coverage/coverage/html">
            <fileset dir="src">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>

    <target name="coverage"
    depends="instrument,test-coverage,coverage-report,summary-coverage-report,alternate-coverage-report"
    description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports.">
    </target>

    <target name = "createJar" depends = "coverage">
        <jar destfile = "build/dist/lib/unix-tools.jar" basedir = "build/classes/src"/>
    </target>

    <target name = "generateDocs" depends="createJar">
        <javadoc packagenames = "shwetado.unixtools.*"
                 sourcepath = "src"
                 destdir = "build/dist/docs"
                 author  = "true" version = "true"/>
    </target>

    <target name = "createZip" depends = "generateDocs">
        <zip destfile = "unix-tools.zip" basedir = "build/dist" update = "true"/>
    </target>

</project>